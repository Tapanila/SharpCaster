version: '0.3.0'

# this can be used to make the build agent pause on finish to rdp to the machine and check its state 
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

assembly_info:
  patch: true
  file: 'SharpCaster\Properties\AssemblyInfo.cs'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'

#---------------------------------#
#    environment configuration    #
#---------------------------------#

init:
  - ps: $env:customBuildVersion = if ($env:APPVEYOR_REPO_TAG -eq $True) { "$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_BUILD_NUMBER" } else { "$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_BUILD_NUMBER-$env:APPVEYOR_REPO_BRANCH" }
  - ps: $env:customNugetVersion = if ($env:APPVEYOR_REPO_TAG -eq $True) { "$env:APPVEYOR_BUILD_VERSION" } else { "$env:APPVEYOR_BUILD_VERSION-pre" }
  - ps: Update-AppveyorBuild -Version $env:customBuildVersion

# Build worker image (VM template)
image: Visual Studio 2015

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - '%LocalAppData%\NuGet\Cache'

# # Automatically register private account and/or project AppVeyor NuGet feeds.
# nuget:
#   account_feed: true
#   project_feed: true
#   disable_publish_on_pr: true     # disable publishing of .nupkg artifacts to
#                                   # account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
#platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: SharpCaster.Build.sln      # path to Visual Studio solution or project
  #publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  #publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  #publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  #include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  #verbosity: quiet|minimal|normal|detailed
  verbosity: minimal


# scripts to run before build
before_build:
  - ps: nuget restore SharpCaster.Build.sln

# # scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
# before_package:

# # scripts to run after build
after_build:
  # build -> publish_nuget: true does not work since SharpCaster.nuspec is not part of a project
  - ps: nuget pack .\SharpCaster\SharpCaster.nuspec -Version $env:customNugetVersion

# # to run your custom scripts instead of automatic MSBuild
# build_script:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#
test:
  assemblies: SharpCaster.Test\bin\x64\Release\
# test:
#   assemblies:
#     - asm1.dll
#     - asm2.dll

#   categories:
#     - UI
#     - E2E

# # to run tests from different categories as separate jobs in parallel
# #test:
# #  categories:
# #    - A            # A category common for all jobs
# #    - [UI]         # 1st job
# #    - [DAL, BL]    # 2nd job

# # scripts to run before tests
# before_test:
#   - echo script1
#   - ps: Write-Host "script1"

# # scripts to run after tests
# after_test:

# # to run your custom scripts instead of automatic tests
# test_script:
#   - echo This is my custom test script


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing all *.nupkg files in build directory recursively
  - path: '**\SharpCaster*.nupkg'
    name: Nuget

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  - provider: NuGet
    name: nuget_release
    api_key:
      secure: 4YYYawFKzaSc0vT1pVxuzWGaiRUEyPO4JOXeDe5rvr5KvYfVEbWziHQ+SJDdBCZI
    skip_symbols: false
    artifact: /^SharpCaster.*\.nupkg$/
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only
    
  - provider: NuGet
    name: nuget_prerelease
    api_key:
      secure: 4YYYawFKzaSc0vT1pVxuzWGaiRUEyPO4JOXeDe5rvr5KvYfVEbWziHQ+SJDdBCZI
    skip_symbols: false
    artifact: /^SharpCaster.*\.nupkg$/
    on:
      branch: dev

    # Deploying to NuGet feed
  - provider: NuGet
    name: nuget_deploy_testing
    server: https://int.nugettest.org/api/v2/package
    api_key:
      secure: ZdrDBoAuvXRrhsJdkg2k7No0aBHiE5Q0hMcUNeeUJMoevRrZV8PnBOJvN07GaYMD
    skip_symbols: false
    artifact: /^SharpCaster.*\.nupkg$/

# # scripts to run before deployment
# before_deploy:

# # scripts to run after deployment
# after_deploy:

# # to run your custom scripts instead of provider deployments
# deploy_script:

# to disable deployment
# deploy: off
